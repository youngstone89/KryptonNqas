kind: ConfigMap
apiVersion: v1
metadata:
  name: {{ template "krypton.fullname" . }}
  annotations:
{{ toYaml .Values.configmap.annotations | indent 4 }}   
  labels:
    app: {{ template "krypton.name" . }}
    chart: {{ template "krypton.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
{{- if .Values.image.tag }}
    image: {{ .Values.image.tag }}
{{- end }}        
data:
  {{ .Values.configFileName }}.yaml: |- 
      # do not remove this line: it is needed to skip possibly added UTF8 BOM.
      engineUUID: KRYPTON
      defaultHostName:
      defaultNetworkInterface:
        name:
        family: 'IPv4'
      trust:
        maxClockDrift: 15
        clientKey:
{{- if eq .Values.http2.enable true}}
      http2:
        port: {{ .Values.http2.port }}
        host:
{{- end }}
{{- if eq .Values.http.enable true}}
      http:
        port: {{ .Values.http.port }}
        host:
{{- end }}
{{- if eq .Values.https.enable true}}
      https:
        port: {{ .Values.https.port }}
        host:
{{ toYaml .Values.https.sslConfig | indent 8 }}
{{- end }}
{{ toYaml .Values.config | indent 6 }}
      log:
        level: 'status'
        audioLogLevel: {{ .Values.diagnosticLogs.audioLogLevel }}
        maxSize: {{ .Values.diagnosticLogs.maxSize }}
        maxFiles: {{ .Values.diagnosticLogs.maxFiles }}
        enableConsole: true
        colorizeConsole: false
        enableFile: {{ .Values.diagnosticLogs.enableFile }}
        # the following parameters are reserved for Nuance use only.
{{- if .Values.diagnosticLogs.addonsLevel }}
        addonsLevel: {{ .Values.diagnosticLogs.addonsLevel }}
{{- else }}
        addonsLevel: 'warn'
{{- end }}
###########################################################################################################################################################################
{{- if eq .Values.fluentBitSideCar.enabled true }}
  fluent-bit.conf: |-
        @INCLUDE service.conf
        @INCLUDE input.conf
        @INCLUDE filter.conf
        @INCLUDE output.conf
  service.conf:
{{ toYaml .Values.fluentBitSideCar.service | indent 2 }}
  input.conf:
{{ toYaml .Values.fluentBitSideCar.input | indent 2 }}
  filter.conf:
{{ toYaml .Values.fluentBitSideCar.filter | indent 2 }}
  output.conf:
{{ toYaml .Values.fluentBitSideCar.output | indent 2 }}
  parser.conf:
{{ toYaml .Values.fluentBitSideCar.parser | indent 2 }}
  kvs.lua:
{{ toYaml .Values.fluentBitSideCar.kvslua | indent 2 }}
{{- end }}
###########################################################################################################################################################################
{{- if eq .Values.fluentd.enabled true }}
  fluent.conf:
{{ toYaml .Values.fluentd.service | indent 2 }}
{{- end }}
###########################################################################################################################################################################
