{{- if eq .Values.mode "distributed" }}
{{ $nodeCount := .Values.replicas | int }}
apiVersion: v1	
kind: Service	
metadata:	
  name: {{ template "minio.fullname" . }}-svc
  labels:	
    app: {{ template "minio.name" . }}	
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"	
    release: "{{ .Release.Name }}"	
    heritage: "{{ .Release.Service }}"	
spec:	
  clusterIP: None	
  ports:	
    - name: service	
      port: {{ .Values.service.port }}	
      protocol: TCP
  selector:	
    app: {{ template "minio.name" . }}
    release: "{{ .Release.Name }}"	
---
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: {{ template "minio.fullname" . }}
  labels:
    app: {{ template "minio.name" . }}
    chart: {{ template "minio.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  updateStrategy:
    type: {{ .Values.StatefulSetUpdate.updateStrategy }}
  serviceName: {{ template "minio.fullname" . }}-svc
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: {{ template "minio.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      name: {{ template "minio.fullname" . }}
      labels:
        app: {{ template "minio.name" . }}
        release: {{ .Release.Name }}
      {{- if .Values.podAnnotations }}
      annotations:
{{ toYaml .Values.podAnnotations | indent 8 }}
      {{- end }}
    spec:
      {{- if .Values.priorityClassName }}
      priorityClassName: "{{ .Values.priorityClassName }}"
      {{- end }}
      containers:
{{- if eq .Values.fluentBitSideCar.enabled true}}
        - name: fluentbit
          image: {{ .Values.fluentBitSideCar.image.repository }}:{{ .Values.fluentBitSideCar.image.tag }}
          imagePullPolicy: {{ .Values.fluentBitSideCar.image.pullPolicy }}
          ports:
          - name: fluentbit-port
            containerPort: 7700
          livenessProbe:
            httpGet:
              path: /
              port: fluentbit-port
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /
              port: fluentbit-port
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources:
{{ toYaml .Values.fluentBitSideCar.resources | indent 12 }}
          volumeMounts:
          - name: minio-access-logs
            mountPath: /tmp
          - name: fluent-bit-configmap-volume
            mountPath: /fluent-bit/etc/fluent-bit.conf
            subPath: fluent-bit.conf
          - name: fluent-bit-parser-config-volume
            mountPath: /fluent-bit/etc/minioParser.conf
            subPath: minioParser.conf
          - name: fluent-bit-service-config-volume
            mountPath: /fluent-bit/etc/service.conf
            subPath: service.conf
          - name: fluent-bit-output-config-volume
            mountPath: /fluent-bit/etc/output.conf
            subPath: output.conf
          - name: fluent-bit-input-config-volume
            mountPath: /fluent-bit/etc/input.conf
            subPath: input.conf
          - name: fluent-bit-filter-config-volume
            mountPath: /fluent-bit/etc/filter.conf
            subPath: filter.conf
          env:
          - name: MY_NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: MY_POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: MY_POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: MY_POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: MY_POD_SERVICE_ACCOUNT
            valueFrom:
              fieldRef:
                fieldPath: spec.serviceAccountName
          - name: HELM_RELEASE_NAME
            value: {{ .Release.Name }}
          - name: SERVICE
            value: haproxy-ingress-svc-{{ .Release.Name }}
          - name: IMAGE
            value: {{ .Values.image.repository }}:{{ .Values.image.tag }}
{{- end }}
        - name: {{ .Chart.Name }}
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.tls.enabled }}
          command: [ "/bin/sh",
          "-ce",
          "/usr/bin/docker-entrypoint.sh minio -C {{ .Values.configPath }} server
          {{- range $i := until $nodeCount }}
          https://{{ template `minio.fullname` $ }}-{{ $i }}.{{ template `minio.fullname` $ }}-svc.{{ $.Release.Namespace }}.svc.{{ $.Values.clusterDomain }}{{ $.Values.mountPath }}
          {{- end }}" ]
          {{ else }}
          command: [ "/bin/sh",
          "-ce",
          "/usr/bin/docker-entrypoint.sh minio -C {{ .Values.configPath }} server
          {{- range $i := until $nodeCount }}
          http://{{ template `minio.fullname` $ }}-{{ $i }}.{{ template `minio.fullname` $ }}-svc.{{ $.Release.Namespace }}.svc.{{ $.Values.clusterDomain }}{{ $.Values.mountPath }}
          {{- end }}" ]
          {{ end }}
          volumeMounts:
            {{- if eq .Values.fluentBitSideCar.enabled true}}
            - name: minio-access-logs
              mountPath: /tmp
            {{- end }}
            {{- if .Values.persistence.enabled }}
            - name: export
              mountPath: {{ .Values.mountPath }}
              {{- if and .Values.persistence.enabled .Values.persistence.subPath }}
              subPath: "{{ .Values.persistence.subPath }}"
              {{- end }}
            {{ end }}
            - name: minio-config-dir
              mountPath: {{ .Values.configPath }}
            {{- if .Values.tls.enabled }}
            - name: cert-secret-volume
              mountPath: {{ .Values.configPath }}certs
            {{ end }}
          ports:
            - name: service
              containerPort: 9000
          env:
            {{- if eq .Values.fluentBitSideCar.enabled true}}
            - name: MINIO_HTTP_TRACE
              value: /tmp/minio.log
            {{- end }}
            - name: MINIO_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ if .Values.existingSecret }}{{ .Values.existingSecret }}{{ else }}{{ template "minio.fullname" . }}{{ end }}
                  key: accesskey
            - name: MINIO_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ if .Values.existingSecret }}{{ .Values.existingSecret }}{{ else }}{{ template "minio.fullname" . }}{{ end }}
                  key: secretkey
            {{- range $key, $val := .Values.environment }}
            - name: {{ $key }}
              value: {{ $val | quote }}
            {{- end}}
          livenessProbe:
            httpGet:
              path: /minio/health/live
              port: service
              {{- if .Values.tls.enabled }}
              scheme: HTTPS
              {{ else }}
              scheme: HTTP
              {{- end }}
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.livenessProbe.successThreshold }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
      volumes:
{{- if eq .Values.fluentBitSideCar.enabled true}}
        - name: fluent-bit-configmap-volume
          configMap:
            name: {{ template "minio.fullname" . }}-fluentbit
            items:
            - key: fluent-bit.conf
              path: fluent-bit.conf
              mode: 420
        - name: fluent-bit-parser-config-volume
          configMap:
            name: {{ template "minio.fullname" . }}-fluentbit
            items:
            - key: minioParser.conf
              path: minioParser.conf
              mode: 420
        - name: fluent-bit-service-config-volume
          configMap:
            name: {{ template "minio.fullname" . }}-fluentbit
            items:
            - key: service.conf
              path: service.conf
              mode: 420
        - name: fluent-bit-output-config-volume
          configMap:
            name: {{ template "minio.fullname" . }}-fluentbit
            items:
            - key: output.conf
              path: output.conf
              mode: 420
        - name: fluent-bit-input-config-volume
          configMap:
            name: {{ template "minio.fullname" . }}-fluentbit
            items:
            - key: input.conf
              path: input.conf
              mode: 420
        - name: fluent-bit-filter-config-volume
          configMap:
            name: {{ template "minio.fullname" . }}-fluentbit
            items:
            - key: filter.conf
              path: filter.conf
              mode: 420
        - name: minio-access-logs
          emptyDir: {}
{{- end }}
        - name: minio-user
          secret:
            secretName: {{ if .Values.existingSecret }}{{ .Values.existingSecret }}{{ else }}{{ template "minio.fullname" . }}{{ end }}
        - name: minio-config-dir
          emptyDir: {}
        {{- if .Values.tls.enabled }}
        - name: cert-secret-volume
          secret:
            secretName: {{ .Values.tls.certSecret }}
            items:
            - key: {{ .Values.tls.publicCrt }}
              path: public.crt
            - key: {{ .Values.tls.privateKey }}
              path: private.key
            - key: {{ .Values.tls.publicCrt }}
              path: CAs/public.crt
        {{ end }}
{{- if .Values.persistence.enabled }}
  volumeClaimTemplates:
    - metadata:
        name: export
      spec:
        accessModes: [ {{ .Values.persistence.accessMode | quote }} ]
        {{- if .Values.persistence.storageClass }}
        storageClassName: {{ .Values.persistence.storageClass }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.persistence.size }}
{{ end }}
{{- end }}